geom_tile(aes(x = date, y = Project, fill = duration))+
scale_fill_distiller(palette = "Spectral")+
theme_minimal()
data %>%
dplyr::group_by(weekday, Project) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::group_by(weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot()+
geom_tile(aes(x = weekday, y = Project, fill = duration))+
scale_fill_distiller(palette = "Spectral")+
theme_minimal()
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_line(aes(x = date, y = duration))+
theme_minimal()
data = rbind(x, y) %>%
dplyr::select(Project, Start.date, Start.time, End.date, End.time, Duration) %>%
dplyr::mutate(from = as.POSIXct(paste0(Start.date, Start.time, sep = ' ')),
to = as.POSIXct(paste0(End.date, End.time, sep = ' ')),
duration = as.numeric(difftime(to, from, units = 'mins'))) %>%
dplyr::mutate(weekday = factor(weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')),
hour = hour(from)) %>%
dplyr::filter(from >= as.POSIXct('2020-09-28'))
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_line(aes(x = date, y = duration))+
theme_minimal()
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date) %>%
dplyr::summarise(duration = sum(duration) / 60) %>%
ggplot() +
geom_line(aes(x = date, y = duration))+
ylim(0, 5) +
theme_minimal()
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date) %>%
dplyr::summarise(duration = sum(duration) / 60) %>%
ggplot() +
geom_bar(aes(x = date, y = duration), stat = 'identity')+
ylim(0, 5) +
theme_minimal()
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) %>%
dplyr::group_by(month, weekdays) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot() +
geom_line(aes(x = weekday, y = duration, group = month))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot() +
geom_line(aes(x = weekday, y = duration, group = month)) +
theme_minimal()
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot() +
geom_line(aes(x = weekday, y = duration, group = month)) +
theme_minimal()+
facet_wrap(~month)
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot() +
geom_bar(aes(x = weekday, y = duration), stat = 'identity') +
theme_minimal()+
facet_wrap(~month)
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday, project) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday, Project) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_bar(aes(x = weekday, y = duration), stat = 'identity') +
theme_minimal()+
facet_wrap(~month)
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = sum(duration)/60) %>%
ggplot() +
geom_bar(aes(x = weekday, y = duration), stat = 'identity') +
theme_minimal()+
facet_wrap(~month)
install.packages('clipr')
install.packages('nycflights')
install.packages('nycflight')
install.packages('nycflights13')
data = nycflights13::airlines
write.csv(data, 'airline.csv')
data = nycflights13::airports
write.csv(data, 'airport.csv')
data = nycflights13::flights
write.csv(data, 'flight.csv')
data = nycflights13::planes
write.csv(data, 'plane')
data = nycflights13::weather
write.csv(data, 'weather')
getwd()
write.csv(data, 'weather.csv')
data = nycflights13::planes
write.csv(data, 'plane.csv')
data = nycflights13::airlines
write.csv(data, 'airline.csv', row.names = F)
data = nycflights13::airports
write.csv(data, 'airport.csv', row.names = F)
data = nycflights13::flights
write.csv(data, 'flight.csv', row.names = F)
data = nycflights13::planes
write.csv(data, 'plane.csv', row.names = F)
data = nycflights13::weather
write.csv(data, 'weather.csv', row.names = F)
weather = nycflights13::weather
flight = nycflights13::flights
head(weather)
head(weather)
head(flight)
head(nycflights13::airports)
head(nycflights13::airports)
head(nycflights13::weather)
data = ycflights13::airports
data = nycflights13::airports
unique(data$faa)
data = read.csv('Desktop/query_result.csv')
head(Data)
head(data)
library(dplyr)
library(ggplot2)
head(data)
read.csv('Desktop/query_result.csv') %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-')))
data = read.csv('Desktop/query_result.csv')
head(data)
data = read.csv('Desktop/query_result.csv')
colnames(data)[5] = 'amount'
data %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-'))) %>%
dplyr::select(date, account, amount)
gc()
data %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-'))) %>%
dplyr::select(date, account, amount) %>% head()
?pivot_longer
?pivot_wider
data %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-'))) %>%
dplyr::select(date, account, amount) %>%
tidyr::pivot_wider(id_cols = 'date', names_from = 'account', values_from = 'amount')
data %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-'))) %>%
dplyr::select(date, account, amount) %>%
tidyr::pivot_wider(id_cols = 'date', names_from = 'account', values_from = 'amount') %>% View()
gc()
airline = nycflights13::airlines
head(airline)
clipr::write_clip(airline)
plane = nycflights13::planes
head(plane)
clipr::write_clip(plane)
flight = nycflights13::flights
head(flight)
View(flight)
paste0(flight$year, flight$month, flight$day, flight$dep_time)
paste0(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ')
paste(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ')
paste(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ') %>% as.POSIXct('%Y %m %d %H%M')
library(dplyr)
paste(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ') %>% as.POSIXct('%Y %m %d %H%M')
paste(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ') %>% as.POSIXct(format = '%Y %m %d %H%M')
99 %/% 60
99 // 60
99 %% 60
nycflights13::flights %>%
dplyr::mutate(dep_hour = dep_time %?% 60,
dep_min = dep_time %% 60)
nycflights13::flights %>%
dplyr::mutate(dep_hour = dep_time %/% 60,
dep_min = dep_time %% 60)
nycflights13::flights %>%
dplyr::mutate(dep_hour = dep_time %/% 60,
dep_min = dep_time %% 60) %>% View()
stringr::str_pad(flight$dep_time, 4, 'left','0')
colnames(flight)
nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
time = paste(year, month, day, dep_time, sep = ' ') %>% as.POSIXct("%Y %m %d %H%M"))
temp = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'))
head(temp)
View(temp)
time = paste(temp$year, temp$month, temp$day, temp$dep_time, sep = ' ')
time
paste(temp$year, temp$month, temp$day, temp$dep_time, sep = '-')
paste(temp$year, temp$month, temp$day, temp$dep_time, sep = '-') %>% as.POSIXct(format = '%Y-%m-$d-%H%M')
paste(temp$year, temp$month, temp$day, temp$dep_time, sep = '-') %>% as.POSIXct(format = '%Y-%m-%d-%H%M')
temp = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
time = paste(year, month, day, dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"))
colnames(flight)
flight = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
dep_time = paste(year, month, day, dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_dep_time = stringr::str_pad(sched_dep_time, 4, 'left','0'),
sched_dep_time = paste(year, month, day, sched_dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
arr_time = stringr::str_pad(arr_time, 4, 'left','0'),
arr_time = paste(year, month, day, arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_arr_time = stringr::str_pad(sched_arr_time, 4, 'left','0'),
sched_arr_time = paste(year, month, day, sched_arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"))
View(flight)
flight %>%   dplyr::select(-year, -month, -day)
flight = flight %>%   dplyr::select(-year, -month, -day)
flight = flight %>%   dplyr::select(-hour, -minute)
flight = flight %>%   dplyr::select(-time_hour)
flight = flight %>%   dplyr::mutate(speed = distance / (air_time/60))
flight = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
dep_time = paste(year, month, day, dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_dep_time = stringr::str_pad(sched_dep_time, 4, 'left','0'),
sched_dep_time = paste(year, month, day, sched_dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
arr_time = stringr::str_pad(arr_time, 4, 'left','0'),
arr_time = paste(year, month, day, arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_arr_time = stringr::str_pad(sched_arr_time, 4, 'left','0'),
sched_arr_time = paste(year, month, day, sched_arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M")) %>%
dplyr::select(-year, -month, -day, -hour, -minute, -time_hour) %>%
dplyr::mutate(speed = distance / (air_time/60))
clipr::write_clip(flight)
gc()
nrow(flight)
write.csv(flight, 'nycflight.csv', row.names = F)
getwd()
gc()
clipr::write_clip(airline)
clipr::write_clip(plane)
airport = nycflights13::airports
head(airport)
clipr::write_clip(airport)
weather = nycflights13::weather
head(weather)
View(flight)
weather = nycflights13::weather %>%
dplyr::mutate(time = paste(year, month, day, hour, '00', sep = '-') %>% as.POSIXct(format = '%Y-%m-%d-%H-%M')) %>%
dplyr::select(year, month, day, hour)
head(weather)
weather = nycflights13::weather %>%
dplyr::mutate(time = paste(year, month, day, hour, '00', sep = '-') %>% as.POSIXct(format = '%Y-%m-%d-%H-%M')) %>%
dplyr::select(-year, -month, -day, -hour)
View(weather)
flight = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
dep_time = paste(year, month, day, dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_dep_time = stringr::str_pad(sched_dep_time, 4, 'left','0'),
sched_dep_time = paste(year, month, day, sched_dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
arr_time = stringr::str_pad(arr_time, 4, 'left','0'),
arr_time = paste(year, month, day, arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_arr_time = stringr::str_pad(sched_arr_time, 4, 'left','0'),
sched_arr_time = paste(year, month, day, sched_arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M")) %>%
dplyr::select(-year, -month, -day, -hour, -minute) %>%
dplyr::mutate(speed = distance / (air_time/60))
write.csv(flight,'flight.csv', row.names = F)
write.csv(flight,'nycflight.csv', row.names = F)
gc()
airport = nycflights13::airports
clipr
clipr::write_clip(airport)
clipr::write_clip(plane)
clipr::write_clip(airline)
weather = nycflights13::weather
clipr::write_clip(weather)
library(ggplot2)
library(dplyr)
library(tidyr)
library(data.table)
setwd('Documents/Github/taipei-metro/')
options(scipen = 999)
showtext::showtext_auto()
theme_set(theme_minimal(base_family = 'Raleway', base_size = 10))
data = fread('data/clean_data.csv')
station = read.csv('https://raw.githubusercontent.com/repeat/northern-taiwan-metro-stations/master/northern-taiwan.csv') %>%
dplyr::select(line_name, station_name_tw, lat, lon) %>%
dplyr::rename(line = line_name,
station = station_name_tw)
cols <- c("文湖線" = '#c48c31', "淡水信義線" = '#e3002c', "松山新店線" = '#008659',
"中和新蘆線" = '#f8b61c', "板南線" = '#0070bd', "環狀線" = '#ffdb00',
"機場線" = '#8246AF')
head(data)
head(data)
temp = read.csv('data/raw/201701.csv')
head(temp)
temp = fread('data/raw/201701.csv', skip = 2, header = F, sep = ' ', fill = True)
temp = fread('data/raw/201701.csv', skip = 2, header = F, sep = ' ', fill = T)
colnames(temp) = c('date','hour','from','to','number')
head(temp)
head(temp, 5) %>% knitr::kable()
nrow(temp)
length(unique(temp$from))
length(unique(temp$to))
108 * 108
108 * 108 * 24 * 365
108 * 108 * 24 * 364
nrow
nrow(data) / 12
head(station)
head(station, 5) %>% knitr::kable()
?paste
install.packages('anytime')
data$time
paste(temp$date[1:10], temp$hour[1:10])
paste(temp$date[1:10], temp$hour[1:10], ':00')
paste0(temp$date[1:10], ' ', temp$hour[1:10], ':00')
t = paste0(temp$date[1:10], ' ', temp$hour[1:10], ':00')
system.time(res <- as.POSIXct(t))
library(fasttime)
system.time(res <- fasttime(t))
system.time(res <- fastPOSIXct(t))
library(lubridate)
t = paste0(temp$date[1:100], ' ', temp$hour[1:100], ':00')
gc()
system.time(res <- as.POSIXct(t))
system.time(res <- ymd_hm(t))
system.time(res <- fastPOSIXct(t))
library(microbenchmark)
install.packages('microbenchmark')
library(microbenchmark)
microbenchmark(
as.POSIXct(t),
ymd_hm(t),
fastPOSIXct(t)
)
result = microbenchmark(
as.POSIXct(t),
ymd_hm(t),
fastPOSIXct(t)
)
autoplot(result)
?microbenchmark
result = microbenchmark(
'as.POSIXct'=as.POSIXct(t),
ymd_hm(t),
fastPOSIXct(t)
)
autoplot(result)
gc()
result = microbenchmark(
'as.POSIXct' = as.POSIXct(t),
'lubridate' = ymd_hm(t),
'fasttime' = fastPOSIXct(t)
)
result
autoplot(result)
?autoplot
getwd()
ggsave('time_object_speed.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
gc()
place <- "Taipei Taiwan"
highway_sizes <- tibble::tribble(
~highway, ~highway_group, ~size,
"motorway",        "large",   0.5,
"motorway_link",        "large",   0.3,
"primary",        "large",   0.5,
"primary_link",        "large",   0.3,
"secondary",       "medium",   0.3,
"secondary_link",       "medium",   0.3,
"tertiary",       "medium",   0.3,
"tertiary_link",       "medium",   0.3,
"residential",        "small",   0.2,
"living_street",        "small",   0.2,
"unclassified",        "small",   0.2,
"service",        "small",   0.2,
"footway",        "small",   0.2
)
streets_osm <- opq(place) %>%
add_osm_feature(key = "highway",
value = highway_sizes$highway) %>%
osmdata_sf()
?opq
??opq
library(osmdata)
streets_osm <- opq(place) %>%
add_osm_feature(key = "highway",
value = highway_sizes$highway) %>%
osmdata_sf()
streets <- streets_osm$osm_lines %>%
select(osm_id, name, name.en, highway, maxspeed, oneway, surface) %>%
mutate(length = as.numeric(st_length(.))) %>%
left_join(highway_sizes, by="highway") %>%
filter(highway_group != "small" | length >= quantile(length, probs = 0.25))
library(sf)
library(ggplot2)
library(dplyr)
library(tidyr)
library(data.table)
library(stringr)
library(forcats)
library(lubridate)
setwd('~/Documents/Github/opendata-taipei-metro/')
options(scipen = 999)
showtext::showtext_auto()
theme_set(theme_minimal(base_family = 'Raleway', base_size = 10))
data = fread('data/clean_data.csv')
station = read.csv('https://raw.githubusercontent.com/repeat/northern-taiwan-metro-stations/master/northern-taiwan.csv') %>%
dplyr::rename(line = line_name,
station = station_name_tw) %>%
dplyr::mutate(district = str_sub(address, 4, 6)) %>%
dplyr::select(line, station, district, lat, lon)
cols <- c("文湖線" = '#c48c31', "淡水信義線" = '#e3002c', "松山新店線" = '#008659',
"中和新蘆線" = '#f8b61c', "板南線" = '#0070bd', "環狀線" = '#ffdb00',
"機場線" = '#8246AF')
# 內科
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘')) %>%
dplyr::group_by(from) %>%
dplyr::summarise(number = sum(number) / 100000) %>%
dplyr::filter(number >= 1)
temp$from = fct_reorder(temp$from, temp$number)
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
scale_x_continuous(name = '十萬人',
breaks = seq(1, 6)) +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp
temp
temp = temp %>%   top_n(number, 10)
temp = temp %>%   top_n(10)
temp
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
scale_x_continuous(name = '十萬人',
breaks = seq(1, 6)) +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp
head(data)
library(lubridate)
holiday = read.csv('data/2017_holiday.csv')
holiday = read.csv('data/2017_holiday.csv', encoding = 'BIG-5')
head(holiday)
holiday = read.csv('data/2017_holiday.csv', encoding = 'BIG5')
holiday = read.csv('data/2017_holiday.csv', encoding = 'UTF8')
holiday = read.csv('data/2017_holiday.csv', encoding = 'UTF-8')
