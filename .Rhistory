select(osm_id, name, name.en, highway, maxspeed, oneway, surface) %>%
mutate(length = as.numeric(st_length(.))) %>%
left_join(highway_sizes, by="highway") %>%
filter(highway_group != "small" | length >= quantile(length, probs = 0.25))
railways_osm <- opq(place) %>%
add_osm_feature(key = "railway", value="rail") %>%
osmdata_sf()
gc()
highway_sizes
library(ggplot2)
library(dplyr)
library(tidyr)
library(data.table)
setwd('Documents/Github/taipei-metro/')
options(scipen = 999)
showtext::showtext_auto()
theme_set(theme_minimal(base_family = 'Raleway', base_size = 10))
data = fread('data/clean_data.csv')
station = read.csv('https://raw.githubusercontent.com/repeat/northern-taiwan-metro-stations/master/northern-taiwan.csv') %>%
dplyr::select(line_name, station_name_tw, lat, lon) %>%
dplyr::rename(line = line_name,
station = station_name_tw)
cols <- c("文湖線" = '#c48c31', "淡水信義線" = '#e3002c', "松山新店線" = '#008659',
"中和新蘆線" = '#f8b61c', "板南線" = '#0070bd', "環狀線" = '#ffdb00',
"機場線" = '#8246AF')
setwd('~/Documents/Github/taipei-metro/')
setwd('~/Documents/Github/opendata-taipei-metro/')
options(scipen = 999)
showtext::showtext_auto()
theme_set(theme_minimal(base_family = 'Raleway', base_size = 10))
data = fread('data/clean_data.csv')
station = read.csv('https://raw.githubusercontent.com/repeat/northern-taiwan-metro-stations/master/northern-taiwan.csv') %>%
dplyr::select(line_name, station_name_tw, lat, lon) %>%
dplyr::rename(line = line_name,
station = station_name_tw)
cols <- c("文湖線" = '#c48c31', "淡水信義線" = '#e3002c', "松山新店線" = '#008659',
"中和新蘆線" = '#f8b61c', "板南線" = '#0070bd', "環狀線" = '#ffdb00',
"機場線" = '#8246AF')
# time series by date by station
temp = data %>%
pivot_longer(cols = c('from', 'to'),
names_to = 'direction',
values_to = 'station') %>%
dplyr::group_by(date, station) %>%
dplyr::summarise(number = sum(number)) %>%
merge(station, by = 'station') %>%
dplyr::mutate(date = as.Date(date),
group = ifelse(line %in% c('機場線','環狀線'), '機場線＆環狀線', line)) %>%
dplyr::filter(date < as.Date('2018-01-01'))
ggplot(temp, aes(x = date, y = number, group = station, col = line)) +
geom_line(alpha = 0.5) +
facet_wrap(~group) +
scale_x_date(date_labels = "%m",
date_breaks = '1 month') +
scale_color_manual(values = cols) +
theme(legend.position = 'None',
panel.grid.minor = element_blank())
ggplot(temp, aes(x = date, y = number / 10000, group = station, col = line)) +
geom_line(alpha = 0.5) +
facet_wrap(~group) +
labs(title = '台北捷運各站進出站人次',
subtitle = '單位：萬人') +
scale_x_date(date_labels = "%m",
date_breaks = '1 month') +
scale_color_manual(values = cols) +
theme(legend.position = 'None',
panel.grid.minor = element_blank())
ggsave('num_by_station_and_hour.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
ggplot(temp, aes(x = date, y = number / 10000, group = station, col = line)) +
geom_line(alpha = 0.5) +
facet_wrap(~group) +
labs(title = '台北捷運各站進出站人次',
subtitle = '單位：萬人') +
scale_x_date(date_labels = "%B",
date_breaks = '2 month') +
scale_color_manual(values = cols) +
theme(legend.position = 'None',
panel.grid.minor = element_blank())
ggplot(temp, aes(x = date, y = number / 10000, group = station, col = line)) +
geom_line(alpha = 0.5) +
facet_wrap(~group) +
labs(title = '台北捷運各站進出站人次',
subtitle = '單位：萬人') +
scale_x_date(date_labels = "%b",
date_breaks = '2 month') +
scale_color_manual(values = cols) +
theme(legend.position = 'None',
panel.grid.minor = element_blank())
ggplot(temp, aes(x = date, y = number / 10000, group = station, col = line)) +
geom_line(alpha = 0.5) +
facet_wrap(~group) +
labs(title = '台北捷運各站進出站人次',
subtitle = '單位：萬人') +
scale_x_date(date_labels = "%b",
date_breaks = '3 month') +
scale_color_manual(values = cols) +
theme(legend.position = 'None',
panel.grid.minor = element_blank())
ggplot(temp, aes(x = date, y = number / 10000, group = station, col = line)) +
geom_line(alpha = 0.5) +
facet_wrap(~group) +
labs(title = '台北捷運各站進出站人次',
subtitle = '單位：萬人') +
scale_x_date(date_labels = "%b",
date_breaks = '3 month',
minor_breaks = '1 month') +
scale_color_manual(values = cols) +
theme(legend.position = 'None',
panel.grid.minor = element_blank())
ggplot(temp, aes(x = date, y = number / 10000, group = station, col = line)) +
geom_line(alpha = 0.5) +
facet_wrap(~group) +
labs(title = '台北捷運各站進出站人次',
subtitle = '單位：萬人') +
scale_x_date(date_labels = "%b",
date_breaks = '3 month',
minor_breaks = '1 month') +
scale_color_manual(values = cols) +
theme(legend.position = 'None',
panel.grid.minor.y = element_blank())
ggplot(temp, aes(x = date, y = number / 10000, group = station, col = line)) +
geom_line(alpha = 0.5) +
facet_wrap(~group) +
labs(title = '台北捷運各站進出站人次') +
scale_x_date(name = '',
date_labels = "%b",
date_breaks = '3 month',
minor_breaks = '1 month') +
ylab('人數（萬人）') +
scale_color_manual(values = cols) +
theme(legend.position = 'None',
panel.grid.minor.y = element_blank())
ggsave('num_by_station_and_hour.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
# time series by date by line
temp %>%
dplyr::group_by(date, group, line) %>%
dplyr::summarise(number = sum(number) / 10000) %>%
ggplot() +
geom_line(aes(x = date, y = number, col = line)) +
scale_x_date(date_labels = "%b",
date_breaks = '3 month',
minor_breaks = '1 month') +
scale_color_manual(values = cols) +
ylab('人數（萬人）') +
facet_wrap(~group) +
labs(title = '台北捷運各線進出站人次') +
theme(legend.position = 'None',
panel.grid.minor.y = element_blank())
ggsave('num_by_hour_and_line.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
gc()
# time series by date by line
temp %>%
dplyr::group_by(date, group, line) %>%
dplyr::summarise(number = sum(number) / 10000) %>%
ggplot() +
geom_line(aes(x = date, y = number, col = line)) +
scale_x_date(name = '',
date_labels = "%b",
date_breaks = '3 month',
minor_breaks = '1 month') +
scale_color_manual(values = cols) +
ylab('人數（萬人）') +
facet_wrap(~group) +
labs(title = '台北捷運各線進出站人次') +
theme(legend.position = 'None',
panel.grid.minor.y = element_blank())
ggsave('num_by_hour_and_line.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
station
station = read.csv('https://raw.githubusercontent.com/repeat/northern-taiwan-metro-stations/master/northern-taiwan.csv') %>%
dplyr::select(line_name, station_name_tw, lat, lon, address) %>%
dplyr::rename(line = line_name,
station = station_name_tw)
head(station)
library(stringi)
?stri_extract_all_fixed
library(stringr)
str_sub(station$address, 4, 6)
station = read.csv('https://raw.githubusercontent.com/repeat/northern-taiwan-metro-stations/master/northern-taiwan.csv') %>%
dplyr::rename(line = line_name,
station = station_name_tw) %>%
dplyr::mutate(district = str_sub(address, 4, 6)) %>%
dplyr::select(line, station, district, lat, lon)
station
gc()
head(data)
# direction
temp = data %>%
pivot_longer(cols = c('from', 'to'),
names_to = 'direction',
values_to = 'station') %>%
dplyr::group_by(date, station, direction) %>%
dplyr::summarise(number = sum(number)) %>%
ungroup() %>%
pivot_wider(id_cols = c(date, station),
names_from = direction,
values_from = number,
values_fill = 0) %>%
merge(station, by = 'station') %>%
dplyr::mutate(group = ifelse(line %in% c('機場線','環狀線'), '機場線＆環狀線', line))
ggplot(temp, aes(x = from, y = to, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.25) +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.5) +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None')
temp
ggplot(temp, aes(x = from, y = to, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.25) +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.1) +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None')
gc()
ggplot(temp, aes(x = from, y = to, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.1) +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None')
ggplot(temp, aes(x = from, y = to, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.1) +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('進站人數') + ylab('出站人數')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.1) +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('進站人數（萬人）') + ylab('出站人數（萬人）')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.1) +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggsave('inbound_vs_outbound.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
geom_abline(slope = 1) +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, alpha = 0.1) +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
geom_abline(slope = 1, linetype = 'dashed') +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.1) +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.1) +
geom_abline(slope = 1, linetype = 'dashed') +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.05) +
geom_abline(slope = 1, linetype = 'dashed') +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
?
stat_smooth
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(geom = 'line', aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.05) +
geom_abline(slope = 1, linetype = 'dashed') +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(geom = 'line', aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.1) +
geom_abline(slope = 1, linetype = 'dashed') +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(geom = 'line', aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.3) +
geom_abline(slope = 1, linetype = 'dashed') +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(geom = 'line', aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.5) +
geom_abline(slope = 1, linetype = 'dashed') +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(geom = 'line', aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.75) +
geom_abline(slope = 1, linetype = 'dashed') +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(geom = 'line', aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.6) +
geom_abline(slope = 1, linetype = 'dashed') +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggsave('outbound_vs_inbound.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
ggplot(temp, aes(x = from / 10000, y = to / 10000, group = date)) +
# geom_point(col = 'lightgrey', alpha = 0.1) +
stat_smooth(geom = 'line', aes(group = station, col = line), method = 'lm', se = F, fullrange = T, alpha = 0.6) +
geom_abline(slope = 1, linetype = 'dashed') +
scale_color_manual(values = cols) +
facet_wrap(~group, scales = 'free') +
theme(panel.grid.minor = element_blank(),
legend.position = 'None') +
xlab('單日總進站人數（萬人）') + ylab('單日總出站人數（萬人）')
ggsave('outbound_vs_inbound.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
gc()
head(data)
head(data)
head(station)
# cross district
merge(data, station %>% dplyr::select(station, district), by.x = 'from', by.y = 'station')
# cross district
merge(data, station %>% dplyr::select(station, district), by.x = 'from', by.y = 'station', allow.cartesian = T)
station
station[station$station = '忠孝復興', ]
station
head(station)
station[station$station = '忠孝復興', ]
station[station$station == '忠孝復興', ]
gc()
# case
data %>%
dplyr::group_by(from, to) %>%
dplyr::summarise(number = sum(number)) %>%
dplyr::filter(to == '港墘' & number >= 5000) %>%
dplyr::mutate(from = forcats::fct_reorder(from, desc(number))) %>%
ggplot() +
geom_bar(aes(y = from, x = number), stat = 'identity') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
# case
temp = data %>%
dplyr::group_by(from, to) %>%
dplyr::summarise(number = sum(number)) %>%
dplyr::filter(to == '港墘' & number >= 5000)
gc()
# case
temp = data %>%
dplyr::group_by(from, to) %>%
dplyr::summarise(number = sum(number) / 10000) %>%
dplyr::filter(to == '港墘' & number >= 1)
temp
?fct_reorder
temp$from = fct_reorder(temp$from, temp$number, .desc = T)
library(forcats)
temp$from = fct_reorder(temp$from, temp$number, .desc = T)
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp$from = fct_reorder(temp$from, temp$number)
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp
# case
temp = data %>%
dplyr::group_by(from, to) %>%
dplyr::summarise(number = sum(number) / 100000) %>%
dplyr::filter(to == '港墘' & number >= 1)
temp$from = fct_reorder(temp$from, temp$number)
# case
temp = data %>%
dplyr::group_by(from, to) %>%
dplyr::summarise(number = sum(number) / 100000) %>%
dplyr::filter(to == '港墘' & number >= 1)
temp$from = fct_reorder(temp$from, temp$number)
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
gc()
head(data)
head(temp)
head(data)
# from
temp = data %>%
dplyr::filter(from %in% c('西湖','港墘')) %>%
dplyr::group_by(from, to) %>%
dplyr::summarise(number = sum(number) / 100000) %>%
dplyr::filter(number >= 1)
temp$from = fct_reorder(temp$from, temp$number)
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
gc()
# from
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘')) %>%
dplyr::group_by(from, to) %>%
dplyr::summarise(number = sum(number) / 100000) %>%
dplyr::filter(number >= 1)
temp$from = fct_reorder(temp$from, temp$number)
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp
temp
temp$from
# from
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘')) %>%
dplyr::group_by(from) %>%
dplyr::summarise(number = sum(number) / 100000) %>%
dplyr::filter(number >= 1)
temp$from = fct_reorder(temp$from, temp$number)
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
scale_x_continuous(name = '十萬人',
breaks = 1) +
ylab('')
?breaks
??scale_x_continuous
?scale_x_continuous
temp
range(temp$number)
seq(1, 6)
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
scale_x_continuous(name = '十萬人',
breaks = seq(1, 6)) +
ylab('')
ggplot(temp) +
geom_bar(aes(y = from, x = number), stat = 'identity') +
scale_x_continuous(name = '十萬人',
breaks = seq(1, 6)) +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
gc()
data$time
library(lubridate)
hour(data$time)
gc()
head(data)
data
#
data %>%
pivot_longer(cols = c('from', 'to'),
names_to = 'direction',
values_to = 'station') %>%
dplyr::group_by(date) %>%
dplyr::summarise(number = sum(number))
#
temp = data %>%
pivot_longer(cols = c('from', 'to'),
names_to = 'direction',
values_to = 'station') %>%
dplyr::group_by(date, station) %>%
dplyr::summarise(number = sum(number))
temp
temp%>%
arrange(desc(number)) %>%
dplyr::filter(row_number() <= 30)
temp = temp%>%
arrange(desc(number)) %>%
dplyr::filter(row_number() <= 30)
temp
temp$station
nrow(temp)
