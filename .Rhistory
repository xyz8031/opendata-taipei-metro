theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp
# 內科
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘')) %>%
dplyr::group_by(from, type) %>%
dplyr::summarise(number = sum(number) / 100000) %>%
# dplyr::filter(number >= 1) %>%
dplyr::arrange(desc(number)) %>%
dplyr::group_by(type) %>%
dplyr::filter(row_number() <= 10)
temp
temp$from = fct_reorder(temp$from, temp$number)
ggplot(temp) +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '十萬人',
breaks = seq(1, 6)) +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '十萬人',
breaks = seq(1, 6)) +
facet_wrap(~type) +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '十萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp$from = fct_reorder2(temp$from, temp$type, temp$number)
ggplot(temp) +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '十萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp
temp
temp %>%   dplyr::mutate(rank = row_number())
temp = temp %>%   dplyr::mutate(rank = row_number())
temp %>%   dplyr::mutate(rank = row_number(),
from = factor(from, levels = rank))
temp$from = fct_reorder(temp$from, temp$rank)
ggplot(temp) +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free_y') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp
ggplot(temp) +
geom_bar(aes(y = reorder(from, rank), x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free_y') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = reorder(from, number), x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free_y') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
tmep
install.packages('tidytext')
library(tidytext)
install.packages('tidytext')
install.packages("tidytext")
library(tidytext)
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number), x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free_y') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
install.packages('rlang')
install.packages("rlang")
library(tidytext)
library(tidytext)
library(rlang)
remotes::install_github("r-lib/rlang")
library(tidytext)
library(rlang)
install.packages("https://cran.r-project.org/src/contrib/rlang_0.4.10.tar.gz", repos = NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/rlang_0.4.11.tar.gz", repos = NULL, type="source")
library(tidytext)
library(rlang)
install.packages("rlang")
install.packages("rlang")
library(rlang)
library(tidytext)
library(ggplot2)
library(dplyr)
library(tidyr)
library(data.table)
library(stringr)
library(forcats)
library(lubridate)
setwd('~/Documents/Github/opendata-taipei-metro/')
options(scipen = 999)
showtext::showtext_auto()
theme_set(theme_minimal(base_family = 'Raleway', base_size = 10))
data = readRDS('data/clean_data.rds')
station = read.csv('https://raw.githubusercontent.com/repeat/northern-taiwan-metro-stations/master/northern-taiwan.csv') %>%
dplyr::rename(line = line_name,
station = station_name_tw) %>%
dplyr::mutate(district = str_sub(address, 4, 6)) %>%
dplyr::select(line, station, district, lat, lon)
transfer = station %>%
dplyr::group_by(station) %>%
count() %>%
dplyr::filter(n > 1)
cols <- c("文湖線" = '#c48c31', "淡水信義線" = '#e3002c', "松山新店線" = '#008659',
"中和新蘆線" = '#f8b61c', "板南線" = '#0070bd', "環狀線" = '#ffdb00',
"機場線" = '#8246AF')
# 內科
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘')) %>%
dplyr::group_by(from, type) %>%
dplyr::summarise(number = sum(number) / 10000) %>%
# dplyr::filter(number >= 1) %>%
dplyr::arrange(desc(number)) %>%
dplyr::group_by(type) %>%
dplyr::filter(row_number() <= 10) %>%
dplyr::mutate(rank = row_number())
temp$from = fct_reorder(temp$from, temp$rank)
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number), x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free_y') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free_y') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
scale_x_continuous(name = '萬人',
breaks = seq(1, 6)) +
facet_wrap(~type, scales = 'free') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
temp
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free') +
xlab('萬人') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
xlab('萬人') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
reorder_within(temp$from, temp$number, temp$type)
?reorder_within
ggplot(temp) +
# geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
scale_y_reordered()
ggplot(temp) +
# geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
scale_y_reordered(within = type) +
xlab('萬人') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
# geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
scale_y_reordered(within = 'type') +
xlab('萬人') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
# geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
geom_bar(aes(y = from, x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
scale_y_reordered() +
xlab('萬人') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
scale_y_reordered() +
xlab('萬人') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
seq(0, 10, 2)
seq(20, 60)
seq(20, 60, 10)
c(seq(0, 10, 2), seq(20, 60, 10))
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
scale_x_continuous(name = '萬人',
breaks = c(seq(0, 10, 2), seq(20, 60, 10))) +
scale_y_reordered() +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
scale_x_continuous(name = '萬人',
breaks = c(seq(0, 10, 5), seq(20, 60, 10))) +
scale_y_reordered() +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank())
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
scale_x_continuous(name = '萬人',
breaks = c(seq(0, 10, 5), seq(20, 60, 10))) +
scale_y_reordered() +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank(),
panel.grid.minor.x = element_blank())
ggsave('neihu_top_origin.png', width = 16, height = 9, dpi = 500, scale = 0.6)
ggplot(temp) +
geom_bar(aes(y = reorder_within(from, number, type), x = number, fill = type), stat = 'identity', position = 'dodge') +
facet_wrap(~type, scales = 'free_y') +
scale_x_continuous(name = '萬人',
breaks = c(seq(0, 10, 5), seq(20, 60, 10))) +
scale_y_reordered() +
scale_fill_brewer(palette = 'Set1') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = 'None')
ggplot(temp, aes(y = reorder_within(from, number, type), x = number, fill = type)) +
geom_bar(stat = 'identity', position = 'dodge', alpha = 0.75) +
facet_wrap(~type, scales = 'free_y') +
scale_x_continuous(name = '萬人',
breaks = c(seq(0, 10, 5), seq(20, 60, 10))) +
scale_y_reordered() +
scale_fill_brewer(palette = 'Set1') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = 'None')
ggplot(temp, aes(y = reorder_within(from, number, type), x = number, fill = type)) +
geom_bar(stat = 'identity', position = 'dodge', alpha = 0.85) +
facet_wrap(~type, scales = 'free_y') +
scale_x_continuous(name = '萬人',
breaks = c(seq(0, 10, 5), seq(20, 60, 10))) +
scale_y_reordered() +
scale_fill_brewer(palette = 'Set1') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = 'None')
ggplot(temp, aes(y = reorder_within(from, number, type), x = number, fill = type)) +
geom_bar(stat = 'identity', position = 'dodge', alpha = 0.9) +
facet_wrap(~type, scales = 'free_y') +
scale_x_continuous(name = '萬人',
breaks = c(seq(0, 10, 5), seq(20, 60, 10))) +
scale_y_reordered() +
scale_fill_brewer(palette = 'Set1') +
ylab('') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.y  = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = 'None')
ggsave('neihu_top_origin.png', width = 16, height = 9, dpi = 500, scale = 0.6)
gc()
head(data)
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘'))
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘')) %>%
dplyr::group_by(date, hour, type) %>%
dplyr::summarise(number = sum(number))
temp
ggplot(temp) +
geom_boxplot(aes(x = hour, y = number, col = type)) +
scale_cor_brewer(palette = 'Set1')
ggplot(temp) +
geom_boxplot(aes(x = hour, y = number, col = type)) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_boxplot(aes(x = factor(hour), y = number, col = type)) +
scale_color_brewer(palette = 'Set1')
gc()
head(temp)
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘')) %>%
dplyr::group_by(hour, type) %>%
dplyr::summarise(avg = mean(number),
sd = sd(number))
ggplot(temp) +
geom_ribbon(aes(x = factor(hour), ymin = number -sd, ymax = number + sd, col = type)) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_ribbon(aes(x = factor(hour), ymin = avg -sd, ymax = avg + sd, col = type)) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg -sd, ymax = avg + sd, col = type)) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg -sd, ymax = avg + sd, fill = type), alpha = 0.1) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg -sd, ymax = avg + sd, fill = type), alpha = 0.5) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg -sd, ymax = avg + sd, group = type), alpha = 0.5) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg -sd, ymax = avg + sd, group = type, col = type), alpha = 0.5) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
# geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg -sd, ymax = avg + sd, group = type, col = type), alpha = 0.5) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg -sd, ymax = avg + sd, group = type, fill = type), alpha = 0.5) +
scale_color_brewer(palette = 'Set1')
temp
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘')) %>%
dplyr::group_by(date, hour, type) %>%
dplyr::summarise(number = sum(number)) %>%
dplyr::group_by(hour, type) %>%
dplyr::summarise(avg = mean(number),
sd = sd(number))
temp
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg -sd, ymax = avg + sd, group = type, fill = type), alpha = 0.5) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.5) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type), lwd = 1.25) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.35) +
scale_color_brewer(palette = 'Set1')
gc()
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type), lwd = 1.125) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.35) +
scale_color_brewer(palette = 'Set1')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type), lwd = 1.125) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.35) +
scale_color_brewer(palette = 'Set1') +
theme(panel.grid.minor = element_blank())
temp
temp = temp %>%   dplyr::filter(hour >= 5)
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type), lwd = 1.125) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.35) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = seq(5, 23, 1)) +
theme(panel.grid.minor = element_blank())
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type), lwd = 1.125) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.35) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = seq(5, 23, 4)) +
theme(panel.grid.minor.y = element_blank())
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type), lwd = 1.125) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.35) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank())
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type), lwd = 1.125) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.35) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
ggsave('neihu_hourly_passenger.png', width = 16, height = 9, dpi = 500, scale = 0.6)
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type)) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.25) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = type), lwd = 1.1) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.25) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
ggsave('neihu_hourly_passenger.png', width = 16, height = 9, dpi = 500, scale = 0.6)
gc()
head(data)
temp = data %>%
dplyr::filter(to %in% c('西湖','港墘')) %>%
dplyr::group_by(date, hour, weekday) %>%
dplyr::summarise(number = sum(number)) %>%
dplyr::group_by(hour, weekday) %>%
dplyr::summarise(avg = mean(number),
sd = sd(number)) %>%
dplyr::filter(hour >= 5)
temp
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = weekday), lwd = 1.1) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = type, fill = type), alpha = 0.25) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = weekday), lwd = 1.1) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = weekday, fill = type), alpha = 0.25) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = weekday), lwd = 1.1) +
geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = weekday, fill = weekday), alpha = 0.25) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = weekday), lwd = 1.1) +
# geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = weekday, fill = weekday), alpha = 0.25) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
gc()
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = weekday), lwd = 1.1) +
# geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = weekday, fill = weekday), alpha = 0.25) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal') +
facet_wrap(~weekday)
gc()
ggplot(temp) +
geom_line(aes(x = hour, y = avg, col = weekday), lwd = 1.1) +
# geom_ribbon(aes(x = hour, ymin = avg - 1.5 * sd, ymax = avg + 1.5 * sd, group = weekday, fill = weekday), alpha = 0.25) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(breaks = c(6, 9, 12, 15, 18, 21, 23)) +
theme(panel.grid.minor.y = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
